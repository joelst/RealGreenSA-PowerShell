#
# RGS Common API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v01
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER BatchDate
No description available.
.PARAMETER BatchType
No description available.
.PARAMETER PrintedBy
No description available.
.OUTPUTS

BatchLookup<PSCustomObject>
#>

function Initialize-RgSaBatchLookup {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${BatchDate},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("None", "Estimates", "ConfirmationLetters", "Invoices", "CollectionLetters", "Postcards", "PrepayLetters", "ReferralLetters", "Statements", "Export", "UpsellInformationLetters", "CancelLetters")]
        [PSCustomObject]
        ${BatchType},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${PrintedBy}
    )

    Process {
        'Creating PSCustomObject: RealGreenSAPS => RgSaBatchLookup' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "batchDate" = ${BatchDate}
            "batchType" = ${BatchType}
            "printedBy" = ${PrintedBy}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to BatchLookup<PSCustomObject>

.DESCRIPTION

Convert from JSON to BatchLookup<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

BatchLookup<PSCustomObject>
#>
function ConvertFrom-RgSaJsonToBatchLookup {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: RealGreenSAPS => RgSaBatchLookup' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RgSaBatchLookup
        $AllProperties = ("batchDate", "batchType", "printedBy")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "batchDate"))) { #optional property not found
            $BatchDate = $null
        } else {
            $BatchDate = $JsonParameters.PSobject.Properties["batchDate"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "batchType"))) { #optional property not found
            $BatchType = $null
        } else {
            $BatchType = $JsonParameters.PSobject.Properties["batchType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "printedBy"))) { #optional property not found
            $PrintedBy = $null
        } else {
            $PrintedBy = $JsonParameters.PSobject.Properties["printedBy"].value
        }

        $PSO = [PSCustomObject]@{
            "batchDate" = ${BatchDate}
            "batchType" = ${BatchType}
            "printedBy" = ${PrintedBy}
        }

        return $PSO
    }

}

