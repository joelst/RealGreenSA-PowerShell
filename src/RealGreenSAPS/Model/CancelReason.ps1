#
# Real Green Service Assistant Common API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v01
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER LetterID
No description available.
.PARAMETER CancelCategoryID
No description available.
.PARAMETER DocumentTemplateID
No description available.
.PARAMETER Available
No description available.
.PARAMETER CancelDescription
No description available.
.PARAMETER CancelDescriptionFrench
No description available.
.PARAMETER CancelDescriptionSpanish
No description available.
.OUTPUTS

CancelReason<PSCustomObject>
#>

function Initialize-RGSACancelReason {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${LetterID},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CancelCategoryID},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${DocumentTemplateID},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Available},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CancelDescription},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CancelDescriptionFrench},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CancelDescriptionSpanish}
    )

    Process {
        'Creating PSCustomObject: RealGreenSaPS => RGSACancelReason' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "letterID" = ${LetterID}
            "cancelCategoryID" = ${CancelCategoryID}
            "documentTemplateID" = ${DocumentTemplateID}
            "available" = ${Available}
            "cancelDescription" = ${CancelDescription}
            "cancelDescriptionFrench" = ${CancelDescriptionFrench}
            "cancelDescriptionSpanish" = ${CancelDescriptionSpanish}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CancelReason<PSCustomObject>

.DESCRIPTION

Convert from JSON to CancelReason<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CancelReason<PSCustomObject>
#>
function ConvertFrom-RGSAJsonToCancelReason {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: RealGreenSaPS => RGSACancelReason' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RGSACancelReason
        $AllProperties = ("id", "letterID", "cancelCategoryID", "documentTemplateID", "available", "cancelDescription", "cancelDescriptionFrench", "cancelDescriptionSpanish")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "letterID"))) { #optional property not found
            $LetterID = $null
        } else {
            $LetterID = $JsonParameters.PSobject.Properties["letterID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cancelCategoryID"))) { #optional property not found
            $CancelCategoryID = $null
        } else {
            $CancelCategoryID = $JsonParameters.PSobject.Properties["cancelCategoryID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "documentTemplateID"))) { #optional property not found
            $DocumentTemplateID = $null
        } else {
            $DocumentTemplateID = $JsonParameters.PSobject.Properties["documentTemplateID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "available"))) { #optional property not found
            $Available = $null
        } else {
            $Available = $JsonParameters.PSobject.Properties["available"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cancelDescription"))) { #optional property not found
            $CancelDescription = $null
        } else {
            $CancelDescription = $JsonParameters.PSobject.Properties["cancelDescription"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cancelDescriptionFrench"))) { #optional property not found
            $CancelDescriptionFrench = $null
        } else {
            $CancelDescriptionFrench = $JsonParameters.PSobject.Properties["cancelDescriptionFrench"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cancelDescriptionSpanish"))) { #optional property not found
            $CancelDescriptionSpanish = $null
        } else {
            $CancelDescriptionSpanish = $JsonParameters.PSobject.Properties["cancelDescriptionSpanish"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "letterID" = ${LetterID}
            "cancelCategoryID" = ${CancelCategoryID}
            "documentTemplateID" = ${DocumentTemplateID}
            "available" = ${Available}
            "cancelDescription" = ${CancelDescription}
            "cancelDescriptionFrench" = ${CancelDescriptionFrench}
            "cancelDescriptionSpanish" = ${CancelDescriptionSpanish}
        }

        return $PSO
    }

}

