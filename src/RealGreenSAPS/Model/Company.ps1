#
# RGS Common API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v01
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER CompanyName
No description available.
.PARAMETER BranchNumber
No description available.
.PARAMETER AddressLine1
No description available.
.PARAMETER AddressLine2
No description available.
.PARAMETER AddressLine3
No description available.
.PARAMETER State
No description available.
.PARAMETER AreaCode
No description available.
.PARAMETER IsDefaultCompany
No description available.
.PARAMETER Phone1
No description available.
.PARAMETER Phone2
No description available.
.PARAMETER Fax
No description available.
.PARAMETER ManagerID
No description available.
.PARAMETER UnitCodeID
No description available.
.PARAMETER TaxID1
No description available.
.PARAMETER TaxID2
No description available.
.PARAMETER TaxID3
No description available.
.PARAMETER BusinessStartTime
No description available.
.PARAMETER BusinessEndTime
No description available.
.PARAMETER MarketId
No description available.
.PARAMETER PaymentGateway
No description available.
.PARAMETER TerminalId
No description available.
.PARAMETER MerchantId
No description available.
.PARAMETER CreditCardUsername
No description available.
.PARAMETER CreditCardPassword
No description available.
.PARAMETER ReplyEmail
No description available.
.PARAMETER Url
No description available.
.PARAMETER DefaultSalesMessageId
No description available.
.PARAMETER Latitude
No description available.
.PARAMETER Longitude
No description available.
.PARAMETER LunchTimeWindowBegin
No description available.
.PARAMETER LunchTimeWindowEnd
No description available.
.PARAMETER LunchLength
No description available.
.PARAMETER LicenseNumber
No description available.
.PARAMETER BranchNumberAndCompanyName
No description available.
.PARAMETER SwsBranchCode
No description available.
.PARAMETER CompanyToken
No description available.
.PARAMETER SmsNumber
No description available.
.PARAMETER TcnUser
No description available.
.PARAMETER TcnPassword
No description available.
.PARAMETER TcnOptions
No description available.
.PARAMETER AprUsername
No description available.
.PARAMETER AprPassword
No description available.
.PARAMETER AprOptions
No description available.
.PARAMETER RealgreenCustomerNumber
No description available.
.PARAMETER CaptivatedAPIKey
No description available.
.PARAMETER CaptivatedSMSNumber
No description available.
.PARAMETER TenDlcStatus
No description available.
.PARAMETER TaxIdNumber
No description available.
.PARAMETER CnaSmsNumber
No description available.
.OUTPUTS

Company<PSCustomObject>
#>

function Initialize-RgSaCompany {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CompanyName},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BranchNumber},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AddressLine1},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AddressLine2},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AddressLine3},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${State},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AreaCode},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsDefaultCompany},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Phone1},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Phone2},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Fax},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ManagerID},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${UnitCodeID},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TaxID1},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TaxID2},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TaxID3},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[TimeSpan]]
        ${BusinessStartTime},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[TimeSpan]]
        ${BusinessEndTime},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${MarketId},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PaymentGateway},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TerminalId},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MerchantId},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CreditCardUsername},
        [Parameter(Position = 24, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CreditCardPassword},
        [Parameter(Position = 25, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ReplyEmail},
        [Parameter(Position = 26, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Url},
        [Parameter(Position = 27, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${DefaultSalesMessageId},
        [Parameter(Position = 28, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${Latitude},
        [Parameter(Position = 29, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${Longitude},
        [Parameter(Position = 30, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[TimeSpan]]
        ${LunchTimeWindowBegin},
        [Parameter(Position = 31, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[TimeSpan]]
        ${LunchTimeWindowEnd},
        [Parameter(Position = 32, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[TimeSpan]]
        ${LunchLength},
        [Parameter(Position = 33, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LicenseNumber},
        [Parameter(Position = 34, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BranchNumberAndCompanyName},
        [Parameter(Position = 35, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SwsBranchCode},
        [Parameter(Position = 36, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CompanyToken},
        [Parameter(Position = 37, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SmsNumber},
        [Parameter(Position = 38, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TcnUser},
        [Parameter(Position = 39, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TcnPassword},
        [Parameter(Position = 40, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TcnOptions},
        [Parameter(Position = 41, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AprUsername},
        [Parameter(Position = 42, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AprPassword},
        [Parameter(Position = 43, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${AprOptions},
        [Parameter(Position = 44, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${RealgreenCustomerNumber},
        [Parameter(Position = 45, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CaptivatedAPIKey},
        [Parameter(Position = 46, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CaptivatedSMSNumber},
        [Parameter(Position = 47, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TenDlcStatus},
        [Parameter(Position = 48, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TaxIdNumber},
        [Parameter(Position = 49, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CnaSmsNumber}
    )

    Process {
        'Creating PSCustomObject: RealGreenSAPS => RgSaCompany' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "companyName" = ${CompanyName}
            "branchNumber" = ${BranchNumber}
            "addressLine1" = ${AddressLine1}
            "addressLine2" = ${AddressLine2}
            "addressLine3" = ${AddressLine3}
            "state" = ${State}
            "areaCode" = ${AreaCode}
            "isDefaultCompany" = ${IsDefaultCompany}
            "phone1" = ${Phone1}
            "phone2" = ${Phone2}
            "fax" = ${Fax}
            "managerID" = ${ManagerID}
            "unitCodeID" = ${UnitCodeID}
            "taxID1" = ${TaxID1}
            "taxID2" = ${TaxID2}
            "taxID3" = ${TaxID3}
            "businessStartTime" = ${BusinessStartTime}
            "businessEndTime" = ${BusinessEndTime}
            "marketId" = ${MarketId}
            "paymentGateway" = ${PaymentGateway}
            "terminalId" = ${TerminalId}
            "merchantId" = ${MerchantId}
            "creditCardUsername" = ${CreditCardUsername}
            "creditCardPassword" = ${CreditCardPassword}
            "replyEmail" = ${ReplyEmail}
            "url" = ${Url}
            "defaultSalesMessageId" = ${DefaultSalesMessageId}
            "latitude" = ${Latitude}
            "longitude" = ${Longitude}
            "lunchTimeWindowBegin" = ${LunchTimeWindowBegin}
            "lunchTimeWindowEnd" = ${LunchTimeWindowEnd}
            "lunchLength" = ${LunchLength}
            "licenseNumber" = ${LicenseNumber}
            "branchNumberAndCompanyName" = ${BranchNumberAndCompanyName}
            "swsBranchCode" = ${SwsBranchCode}
            "companyToken" = ${CompanyToken}
            "smsNumber" = ${SmsNumber}
            "tcnUser" = ${TcnUser}
            "tcnPassword" = ${TcnPassword}
            "tcnOptions" = ${TcnOptions}
            "aprUsername" = ${AprUsername}
            "aprPassword" = ${AprPassword}
            "aprOptions" = ${AprOptions}
            "realgreenCustomerNumber" = ${RealgreenCustomerNumber}
            "captivatedAPIKey" = ${CaptivatedAPIKey}
            "captivatedSMSNumber" = ${CaptivatedSMSNumber}
            "tenDlcStatus" = ${TenDlcStatus}
            "taxIdNumber" = ${TaxIdNumber}
            "cnaSmsNumber" = ${CnaSmsNumber}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to Company<PSCustomObject>

.DESCRIPTION

Convert from JSON to Company<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

Company<PSCustomObject>
#>
function ConvertFrom-RgSaJsonToCompany {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: RealGreenSAPS => RgSaCompany' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RgSaCompany
        $AllProperties = ("id", "companyName", "branchNumber", "addressLine1", "addressLine2", "addressLine3", "state", "areaCode", "isDefaultCompany", "phone1", "phone2", "fax", "managerID", "unitCodeID", "taxID1", "taxID2", "taxID3", "businessStartTime", "businessEndTime", "marketId", "paymentGateway", "terminalId", "merchantId", "creditCardUsername", "creditCardPassword", "replyEmail", "url", "defaultSalesMessageId", "latitude", "longitude", "lunchTimeWindowBegin", "lunchTimeWindowEnd", "lunchLength", "licenseNumber", "branchNumberAndCompanyName", "swsBranchCode", "companyToken", "smsNumber", "tcnUser", "tcnPassword", "tcnOptions", "aprUsername", "aprPassword", "aprOptions", "realgreenCustomerNumber", "captivatedAPIKey", "captivatedSMSNumber", "tenDlcStatus", "taxIdNumber", "cnaSmsNumber")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "companyName"))) { #optional property not found
            $CompanyName = $null
        } else {
            $CompanyName = $JsonParameters.PSobject.Properties["companyName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "branchNumber"))) { #optional property not found
            $BranchNumber = $null
        } else {
            $BranchNumber = $JsonParameters.PSobject.Properties["branchNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "addressLine1"))) { #optional property not found
            $AddressLine1 = $null
        } else {
            $AddressLine1 = $JsonParameters.PSobject.Properties["addressLine1"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "addressLine2"))) { #optional property not found
            $AddressLine2 = $null
        } else {
            $AddressLine2 = $JsonParameters.PSobject.Properties["addressLine2"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "addressLine3"))) { #optional property not found
            $AddressLine3 = $null
        } else {
            $AddressLine3 = $JsonParameters.PSobject.Properties["addressLine3"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "state"))) { #optional property not found
            $State = $null
        } else {
            $State = $JsonParameters.PSobject.Properties["state"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "areaCode"))) { #optional property not found
            $AreaCode = $null
        } else {
            $AreaCode = $JsonParameters.PSobject.Properties["areaCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "isDefaultCompany"))) { #optional property not found
            $IsDefaultCompany = $null
        } else {
            $IsDefaultCompany = $JsonParameters.PSobject.Properties["isDefaultCompany"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "phone1"))) { #optional property not found
            $Phone1 = $null
        } else {
            $Phone1 = $JsonParameters.PSobject.Properties["phone1"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "phone2"))) { #optional property not found
            $Phone2 = $null
        } else {
            $Phone2 = $JsonParameters.PSobject.Properties["phone2"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "fax"))) { #optional property not found
            $Fax = $null
        } else {
            $Fax = $JsonParameters.PSobject.Properties["fax"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "managerID"))) { #optional property not found
            $ManagerID = $null
        } else {
            $ManagerID = $JsonParameters.PSobject.Properties["managerID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "unitCodeID"))) { #optional property not found
            $UnitCodeID = $null
        } else {
            $UnitCodeID = $JsonParameters.PSobject.Properties["unitCodeID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "taxID1"))) { #optional property not found
            $TaxID1 = $null
        } else {
            $TaxID1 = $JsonParameters.PSobject.Properties["taxID1"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "taxID2"))) { #optional property not found
            $TaxID2 = $null
        } else {
            $TaxID2 = $JsonParameters.PSobject.Properties["taxID2"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "taxID3"))) { #optional property not found
            $TaxID3 = $null
        } else {
            $TaxID3 = $JsonParameters.PSobject.Properties["taxID3"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "businessStartTime"))) { #optional property not found
            $BusinessStartTime = $null
        } else {
            $BusinessStartTime = $JsonParameters.PSobject.Properties["businessStartTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "businessEndTime"))) { #optional property not found
            $BusinessEndTime = $null
        } else {
            $BusinessEndTime = $JsonParameters.PSobject.Properties["businessEndTime"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "marketId"))) { #optional property not found
            $MarketId = $null
        } else {
            $MarketId = $JsonParameters.PSobject.Properties["marketId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "paymentGateway"))) { #optional property not found
            $PaymentGateway = $null
        } else {
            $PaymentGateway = $JsonParameters.PSobject.Properties["paymentGateway"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "terminalId"))) { #optional property not found
            $TerminalId = $null
        } else {
            $TerminalId = $JsonParameters.PSobject.Properties["terminalId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "merchantId"))) { #optional property not found
            $MerchantId = $null
        } else {
            $MerchantId = $JsonParameters.PSobject.Properties["merchantId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "creditCardUsername"))) { #optional property not found
            $CreditCardUsername = $null
        } else {
            $CreditCardUsername = $JsonParameters.PSobject.Properties["creditCardUsername"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "creditCardPassword"))) { #optional property not found
            $CreditCardPassword = $null
        } else {
            $CreditCardPassword = $JsonParameters.PSobject.Properties["creditCardPassword"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "replyEmail"))) { #optional property not found
            $ReplyEmail = $null
        } else {
            $ReplyEmail = $JsonParameters.PSobject.Properties["replyEmail"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "url"))) { #optional property not found
            $Url = $null
        } else {
            $Url = $JsonParameters.PSobject.Properties["url"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "defaultSalesMessageId"))) { #optional property not found
            $DefaultSalesMessageId = $null
        } else {
            $DefaultSalesMessageId = $JsonParameters.PSobject.Properties["defaultSalesMessageId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "latitude"))) { #optional property not found
            $Latitude = $null
        } else {
            $Latitude = $JsonParameters.PSobject.Properties["latitude"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "longitude"))) { #optional property not found
            $Longitude = $null
        } else {
            $Longitude = $JsonParameters.PSobject.Properties["longitude"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lunchTimeWindowBegin"))) { #optional property not found
            $LunchTimeWindowBegin = $null
        } else {
            $LunchTimeWindowBegin = $JsonParameters.PSobject.Properties["lunchTimeWindowBegin"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lunchTimeWindowEnd"))) { #optional property not found
            $LunchTimeWindowEnd = $null
        } else {
            $LunchTimeWindowEnd = $JsonParameters.PSobject.Properties["lunchTimeWindowEnd"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "lunchLength"))) { #optional property not found
            $LunchLength = $null
        } else {
            $LunchLength = $JsonParameters.PSobject.Properties["lunchLength"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "licenseNumber"))) { #optional property not found
            $LicenseNumber = $null
        } else {
            $LicenseNumber = $JsonParameters.PSobject.Properties["licenseNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "branchNumberAndCompanyName"))) { #optional property not found
            $BranchNumberAndCompanyName = $null
        } else {
            $BranchNumberAndCompanyName = $JsonParameters.PSobject.Properties["branchNumberAndCompanyName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "swsBranchCode"))) { #optional property not found
            $SwsBranchCode = $null
        } else {
            $SwsBranchCode = $JsonParameters.PSobject.Properties["swsBranchCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "companyToken"))) { #optional property not found
            $CompanyToken = $null
        } else {
            $CompanyToken = $JsonParameters.PSobject.Properties["companyToken"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "smsNumber"))) { #optional property not found
            $SmsNumber = $null
        } else {
            $SmsNumber = $JsonParameters.PSobject.Properties["smsNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tcnUser"))) { #optional property not found
            $TcnUser = $null
        } else {
            $TcnUser = $JsonParameters.PSobject.Properties["tcnUser"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tcnPassword"))) { #optional property not found
            $TcnPassword = $null
        } else {
            $TcnPassword = $JsonParameters.PSobject.Properties["tcnPassword"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tcnOptions"))) { #optional property not found
            $TcnOptions = $null
        } else {
            $TcnOptions = $JsonParameters.PSobject.Properties["tcnOptions"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "aprUsername"))) { #optional property not found
            $AprUsername = $null
        } else {
            $AprUsername = $JsonParameters.PSobject.Properties["aprUsername"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "aprPassword"))) { #optional property not found
            $AprPassword = $null
        } else {
            $AprPassword = $JsonParameters.PSobject.Properties["aprPassword"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "aprOptions"))) { #optional property not found
            $AprOptions = $null
        } else {
            $AprOptions = $JsonParameters.PSobject.Properties["aprOptions"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "realgreenCustomerNumber"))) { #optional property not found
            $RealgreenCustomerNumber = $null
        } else {
            $RealgreenCustomerNumber = $JsonParameters.PSobject.Properties["realgreenCustomerNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "captivatedAPIKey"))) { #optional property not found
            $CaptivatedAPIKey = $null
        } else {
            $CaptivatedAPIKey = $JsonParameters.PSobject.Properties["captivatedAPIKey"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "captivatedSMSNumber"))) { #optional property not found
            $CaptivatedSMSNumber = $null
        } else {
            $CaptivatedSMSNumber = $JsonParameters.PSobject.Properties["captivatedSMSNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "tenDlcStatus"))) { #optional property not found
            $TenDlcStatus = $null
        } else {
            $TenDlcStatus = $JsonParameters.PSobject.Properties["tenDlcStatus"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "taxIdNumber"))) { #optional property not found
            $TaxIdNumber = $null
        } else {
            $TaxIdNumber = $JsonParameters.PSobject.Properties["taxIdNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cnaSmsNumber"))) { #optional property not found
            $CnaSmsNumber = $null
        } else {
            $CnaSmsNumber = $JsonParameters.PSobject.Properties["cnaSmsNumber"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "companyName" = ${CompanyName}
            "branchNumber" = ${BranchNumber}
            "addressLine1" = ${AddressLine1}
            "addressLine2" = ${AddressLine2}
            "addressLine3" = ${AddressLine3}
            "state" = ${State}
            "areaCode" = ${AreaCode}
            "isDefaultCompany" = ${IsDefaultCompany}
            "phone1" = ${Phone1}
            "phone2" = ${Phone2}
            "fax" = ${Fax}
            "managerID" = ${ManagerID}
            "unitCodeID" = ${UnitCodeID}
            "taxID1" = ${TaxID1}
            "taxID2" = ${TaxID2}
            "taxID3" = ${TaxID3}
            "businessStartTime" = ${BusinessStartTime}
            "businessEndTime" = ${BusinessEndTime}
            "marketId" = ${MarketId}
            "paymentGateway" = ${PaymentGateway}
            "terminalId" = ${TerminalId}
            "merchantId" = ${MerchantId}
            "creditCardUsername" = ${CreditCardUsername}
            "creditCardPassword" = ${CreditCardPassword}
            "replyEmail" = ${ReplyEmail}
            "url" = ${Url}
            "defaultSalesMessageId" = ${DefaultSalesMessageId}
            "latitude" = ${Latitude}
            "longitude" = ${Longitude}
            "lunchTimeWindowBegin" = ${LunchTimeWindowBegin}
            "lunchTimeWindowEnd" = ${LunchTimeWindowEnd}
            "lunchLength" = ${LunchLength}
            "licenseNumber" = ${LicenseNumber}
            "branchNumberAndCompanyName" = ${BranchNumberAndCompanyName}
            "swsBranchCode" = ${SwsBranchCode}
            "companyToken" = ${CompanyToken}
            "smsNumber" = ${SmsNumber}
            "tcnUser" = ${TcnUser}
            "tcnPassword" = ${TcnPassword}
            "tcnOptions" = ${TcnOptions}
            "aprUsername" = ${AprUsername}
            "aprPassword" = ${AprPassword}
            "aprOptions" = ${AprOptions}
            "realgreenCustomerNumber" = ${RealgreenCustomerNumber}
            "captivatedAPIKey" = ${CaptivatedAPIKey}
            "captivatedSMSNumber" = ${CaptivatedSMSNumber}
            "tenDlcStatus" = ${TenDlcStatus}
            "taxIdNumber" = ${TaxIdNumber}
            "cnaSmsNumber" = ${CnaSmsNumber}
        }

        return $PSO
    }

}

