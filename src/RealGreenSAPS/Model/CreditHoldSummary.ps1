#
# Real Green Service Assistant Common API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v01
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER CustomerCount
No description available.
.PARAMETER Due1
No description available.
.PARAMETER Due2
No description available.
.PARAMETER Due3
No description available.
.PARAMETER Due4
No description available.
.PARAMETER Due5
No description available.
.PARAMETER Due6
No description available.
.PARAMETER Due7
No description available.
.PARAMETER Balance
No description available.
.OUTPUTS

CreditHoldSummary<PSCustomObject>
#>

function Initialize-RGSACreditHoldSummary {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CustomerCount},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${Due1},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${Due2},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${Due3},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${Due4},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${Due5},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${Due6},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${Due7},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${Balance}
    )

    Process {
        'Creating PSCustomObject: RealGreenSaPS => RGSACreditHoldSummary' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "customerCount" = ${CustomerCount}
            "due1" = ${Due1}
            "due2" = ${Due2}
            "due3" = ${Due3}
            "due4" = ${Due4}
            "due5" = ${Due5}
            "due6" = ${Due6}
            "due7" = ${Due7}
            "balance" = ${Balance}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CreditHoldSummary<PSCustomObject>

.DESCRIPTION

Convert from JSON to CreditHoldSummary<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CreditHoldSummary<PSCustomObject>
#>
function ConvertFrom-RGSAJsonToCreditHoldSummary {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: RealGreenSaPS => RGSACreditHoldSummary' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RGSACreditHoldSummary
        $AllProperties = ("customerCount", "due1", "due2", "due3", "due4", "due5", "due6", "due7", "balance")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerCount"))) { #optional property not found
            $CustomerCount = $null
        } else {
            $CustomerCount = $JsonParameters.PSobject.Properties["customerCount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "due1"))) { #optional property not found
            $Due1 = $null
        } else {
            $Due1 = $JsonParameters.PSobject.Properties["due1"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "due2"))) { #optional property not found
            $Due2 = $null
        } else {
            $Due2 = $JsonParameters.PSobject.Properties["due2"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "due3"))) { #optional property not found
            $Due3 = $null
        } else {
            $Due3 = $JsonParameters.PSobject.Properties["due3"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "due4"))) { #optional property not found
            $Due4 = $null
        } else {
            $Due4 = $JsonParameters.PSobject.Properties["due4"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "due5"))) { #optional property not found
            $Due5 = $null
        } else {
            $Due5 = $JsonParameters.PSobject.Properties["due5"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "due6"))) { #optional property not found
            $Due6 = $null
        } else {
            $Due6 = $JsonParameters.PSobject.Properties["due6"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "due7"))) { #optional property not found
            $Due7 = $null
        } else {
            $Due7 = $JsonParameters.PSobject.Properties["due7"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "balance"))) { #optional property not found
            $Balance = $null
        } else {
            $Balance = $JsonParameters.PSobject.Properties["balance"].value
        }

        $PSO = [PSCustomObject]@{
            "customerCount" = ${CustomerCount}
            "due1" = ${Due1}
            "due2" = ${Due2}
            "due3" = ${Due3}
            "due4" = ${Due4}
            "due5" = ${Due5}
            "due6" = ${Due6}
            "due7" = ${Due7}
            "balance" = ${Balance}
        }

        return $PSO
    }

}

