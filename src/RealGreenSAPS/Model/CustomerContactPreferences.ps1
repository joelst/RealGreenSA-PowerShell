#
# Real Green Service Assistant Common API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v01
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER DontTelemarket
No description available.
.PARAMETER DontDirectMail
No description available.
.PARAMETER DontEmail
No description available.
.PARAMETER EmailStatements
No description available.
.PARAMETER EmailPrenotification
No description available.
.PARAMETER DontTelemarketLocal
No description available.
.PARAMETER DontTelemarketCustomerRequest
No description available.
.PARAMETER DontUpsell
No description available.
.PARAMETER PreferredPhone
No description available.
.PARAMETER AutoPay
No description available.
.PARAMETER ContactPreferred
No description available.
.PARAMETER NoKnock
No description available.
.PARAMETER CawRegisteredUser
No description available.
.PARAMETER PreferredLanguage
No description available.
.PARAMETER TextPrenotification
No description available.
.PARAMETER DontFollowupByEmail
No description available.
.PARAMETER DontText
No description available.
.PARAMETER DontEmailInvoice
No description available.
.PARAMETER AmaAdministrative
No description available.
.PARAMETER AmaMarket
No description available.
.PARAMETER AmaService
No description available.
.PARAMETER CustomerNumber
No description available.
.PARAMETER ContAllow
No description available.
.PARAMETER PreferredPhoneDesc
No description available.
.PARAMETER ContactPreferredDesc
No description available.
.PARAMETER PreferredLanguageDesc
No description available.
.OUTPUTS

CustomerContactPreferences<PSCustomObject>
#>

function Initialize-RGSACustomerContactPreferences {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${DontTelemarket},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${DontDirectMail},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${DontEmail},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${EmailStatements},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${EmailPrenotification},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${DontTelemarketLocal},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${DontTelemarketCustomerRequest},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${DontUpsell},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PreferredPhone},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AutoPay},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ContactPreferred},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${NoKnock},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${CawRegisteredUser},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PreferredLanguage},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${TextPrenotification},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${DontFollowupByEmail},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${DontText},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${DontEmailInvoice},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AmaAdministrative},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AmaMarket},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AmaService},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CustomerNumber},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ContAllow},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PreferredPhoneDesc},
        [Parameter(Position = 24, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ContactPreferredDesc},
        [Parameter(Position = 25, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PreferredLanguageDesc}
    )

    Process {
        'Creating PSCustomObject: RealGreenSaPS => RGSACustomerContactPreferences' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "dontTelemarket" = ${DontTelemarket}
            "dontDirectMail" = ${DontDirectMail}
            "dontEmail" = ${DontEmail}
            "emailStatements" = ${EmailStatements}
            "emailPrenotification" = ${EmailPrenotification}
            "dontTelemarketLocal" = ${DontTelemarketLocal}
            "dontTelemarketCustomerRequest" = ${DontTelemarketCustomerRequest}
            "dontUpsell" = ${DontUpsell}
            "preferredPhone" = ${PreferredPhone}
            "autoPay" = ${AutoPay}
            "contactPreferred" = ${ContactPreferred}
            "noKnock" = ${NoKnock}
            "cawRegisteredUser" = ${CawRegisteredUser}
            "preferredLanguage" = ${PreferredLanguage}
            "textPrenotification" = ${TextPrenotification}
            "dontFollowupByEmail" = ${DontFollowupByEmail}
            "dontText" = ${DontText}
            "dontEmailInvoice" = ${DontEmailInvoice}
            "amaAdministrative" = ${AmaAdministrative}
            "amaMarket" = ${AmaMarket}
            "amaService" = ${AmaService}
            "customerNumber" = ${CustomerNumber}
            "contAllow" = ${ContAllow}
            "preferredPhoneDesc" = ${PreferredPhoneDesc}
            "contactPreferredDesc" = ${ContactPreferredDesc}
            "preferredLanguageDesc" = ${PreferredLanguageDesc}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CustomerContactPreferences<PSCustomObject>

.DESCRIPTION

Convert from JSON to CustomerContactPreferences<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CustomerContactPreferences<PSCustomObject>
#>
function ConvertFrom-RGSAJsonToCustomerContactPreferences {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: RealGreenSaPS => RGSACustomerContactPreferences' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RGSACustomerContactPreferences
        $AllProperties = ("dontTelemarket", "dontDirectMail", "dontEmail", "emailStatements", "emailPrenotification", "dontTelemarketLocal", "dontTelemarketCustomerRequest", "dontUpsell", "preferredPhone", "autoPay", "contactPreferred", "noKnock", "cawRegisteredUser", "preferredLanguage", "textPrenotification", "dontFollowupByEmail", "dontText", "dontEmailInvoice", "amaAdministrative", "amaMarket", "amaService", "customerNumber", "contAllow", "preferredPhoneDesc", "contactPreferredDesc", "preferredLanguageDesc")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dontTelemarket"))) { #optional property not found
            $DontTelemarket = $null
        } else {
            $DontTelemarket = $JsonParameters.PSobject.Properties["dontTelemarket"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dontDirectMail"))) { #optional property not found
            $DontDirectMail = $null
        } else {
            $DontDirectMail = $JsonParameters.PSobject.Properties["dontDirectMail"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dontEmail"))) { #optional property not found
            $DontEmail = $null
        } else {
            $DontEmail = $JsonParameters.PSobject.Properties["dontEmail"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "emailStatements"))) { #optional property not found
            $EmailStatements = $null
        } else {
            $EmailStatements = $JsonParameters.PSobject.Properties["emailStatements"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "emailPrenotification"))) { #optional property not found
            $EmailPrenotification = $null
        } else {
            $EmailPrenotification = $JsonParameters.PSobject.Properties["emailPrenotification"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dontTelemarketLocal"))) { #optional property not found
            $DontTelemarketLocal = $null
        } else {
            $DontTelemarketLocal = $JsonParameters.PSobject.Properties["dontTelemarketLocal"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dontTelemarketCustomerRequest"))) { #optional property not found
            $DontTelemarketCustomerRequest = $null
        } else {
            $DontTelemarketCustomerRequest = $JsonParameters.PSobject.Properties["dontTelemarketCustomerRequest"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dontUpsell"))) { #optional property not found
            $DontUpsell = $null
        } else {
            $DontUpsell = $JsonParameters.PSobject.Properties["dontUpsell"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "preferredPhone"))) { #optional property not found
            $PreferredPhone = $null
        } else {
            $PreferredPhone = $JsonParameters.PSobject.Properties["preferredPhone"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "autoPay"))) { #optional property not found
            $AutoPay = $null
        } else {
            $AutoPay = $JsonParameters.PSobject.Properties["autoPay"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "contactPreferred"))) { #optional property not found
            $ContactPreferred = $null
        } else {
            $ContactPreferred = $JsonParameters.PSobject.Properties["contactPreferred"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "noKnock"))) { #optional property not found
            $NoKnock = $null
        } else {
            $NoKnock = $JsonParameters.PSobject.Properties["noKnock"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cawRegisteredUser"))) { #optional property not found
            $CawRegisteredUser = $null
        } else {
            $CawRegisteredUser = $JsonParameters.PSobject.Properties["cawRegisteredUser"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "preferredLanguage"))) { #optional property not found
            $PreferredLanguage = $null
        } else {
            $PreferredLanguage = $JsonParameters.PSobject.Properties["preferredLanguage"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "textPrenotification"))) { #optional property not found
            $TextPrenotification = $null
        } else {
            $TextPrenotification = $JsonParameters.PSobject.Properties["textPrenotification"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dontFollowupByEmail"))) { #optional property not found
            $DontFollowupByEmail = $null
        } else {
            $DontFollowupByEmail = $JsonParameters.PSobject.Properties["dontFollowupByEmail"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dontText"))) { #optional property not found
            $DontText = $null
        } else {
            $DontText = $JsonParameters.PSobject.Properties["dontText"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dontEmailInvoice"))) { #optional property not found
            $DontEmailInvoice = $null
        } else {
            $DontEmailInvoice = $JsonParameters.PSobject.Properties["dontEmailInvoice"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "amaAdministrative"))) { #optional property not found
            $AmaAdministrative = $null
        } else {
            $AmaAdministrative = $JsonParameters.PSobject.Properties["amaAdministrative"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "amaMarket"))) { #optional property not found
            $AmaMarket = $null
        } else {
            $AmaMarket = $JsonParameters.PSobject.Properties["amaMarket"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "amaService"))) { #optional property not found
            $AmaService = $null
        } else {
            $AmaService = $JsonParameters.PSobject.Properties["amaService"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerNumber"))) { #optional property not found
            $CustomerNumber = $null
        } else {
            $CustomerNumber = $JsonParameters.PSobject.Properties["customerNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "contAllow"))) { #optional property not found
            $ContAllow = $null
        } else {
            $ContAllow = $JsonParameters.PSobject.Properties["contAllow"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "preferredPhoneDesc"))) { #optional property not found
            $PreferredPhoneDesc = $null
        } else {
            $PreferredPhoneDesc = $JsonParameters.PSobject.Properties["preferredPhoneDesc"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "contactPreferredDesc"))) { #optional property not found
            $ContactPreferredDesc = $null
        } else {
            $ContactPreferredDesc = $JsonParameters.PSobject.Properties["contactPreferredDesc"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "preferredLanguageDesc"))) { #optional property not found
            $PreferredLanguageDesc = $null
        } else {
            $PreferredLanguageDesc = $JsonParameters.PSobject.Properties["preferredLanguageDesc"].value
        }

        $PSO = [PSCustomObject]@{
            "dontTelemarket" = ${DontTelemarket}
            "dontDirectMail" = ${DontDirectMail}
            "dontEmail" = ${DontEmail}
            "emailStatements" = ${EmailStatements}
            "emailPrenotification" = ${EmailPrenotification}
            "dontTelemarketLocal" = ${DontTelemarketLocal}
            "dontTelemarketCustomerRequest" = ${DontTelemarketCustomerRequest}
            "dontUpsell" = ${DontUpsell}
            "preferredPhone" = ${PreferredPhone}
            "autoPay" = ${AutoPay}
            "contactPreferred" = ${ContactPreferred}
            "noKnock" = ${NoKnock}
            "cawRegisteredUser" = ${CawRegisteredUser}
            "preferredLanguage" = ${PreferredLanguage}
            "textPrenotification" = ${TextPrenotification}
            "dontFollowupByEmail" = ${DontFollowupByEmail}
            "dontText" = ${DontText}
            "dontEmailInvoice" = ${DontEmailInvoice}
            "amaAdministrative" = ${AmaAdministrative}
            "amaMarket" = ${AmaMarket}
            "amaService" = ${AmaService}
            "customerNumber" = ${CustomerNumber}
            "contAllow" = ${ContAllow}
            "preferredPhoneDesc" = ${PreferredPhoneDesc}
            "contactPreferredDesc" = ${ContactPreferredDesc}
            "preferredLanguageDesc" = ${PreferredLanguageDesc}
        }

        return $PSO
    }

}

