#
# RGS Common API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v01
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER CustomerID
No description available.
.PARAMETER CustomerStatus
No description available.
.PARAMETER CustomerCompanyName
No description available.
.PARAMETER CustomerFirstName
No description available.
.PARAMETER CustomerLastName
No description available.
.PARAMETER CustomerStreetAddress
No description available.
.PARAMETER CustomerPreDirection
No description available.
.PARAMETER CustomerStreetNumber
No description available.
.PARAMETER CustomerPostDirection
No description available.
.PARAMETER CustomerStreetSuffix
No description available.
.PARAMETER CustomerStreetName
No description available.
.PARAMETER CustomerCity
No description available.
.PARAMETER CustomerState
No description available.
.PARAMETER CustomerZip
No description available.
.PARAMETER UseBillingInfo
No description available.
.PARAMETER CustomerInvoiceType
No description available.
.PARAMETER BillingCompanyName
No description available.
.PARAMETER BillingLastName
No description available.
.PARAMETER BillingFirstName
No description available.
.PARAMETER BillingStreetAddress
No description available.
.PARAMETER BillingPreDirection
No description available.
.PARAMETER BillingStreetNumber
No description available.
.PARAMETER BillingStreetSuffix
No description available.
.PARAMETER BillingPostDirection
No description available.
.PARAMETER BillingStreetName
No description available.
.PARAMETER BillingCity
No description available.
.PARAMETER BillingState
No description available.
.PARAMETER BillingZip
No description available.
.PARAMETER CustomerSource
No description available.
.PARAMETER CustomerSubdivisionID
No description available.
.PARAMETER CustomerBranchID
No description available.
.PARAMETER CustomerTaxId1
No description available.
.PARAMETER CustomerTaxId2
No description available.
.PARAMETER CustomerTaxId3
No description available.
.PARAMETER CustomerTerritoryCode
No description available.
.PARAMETER CustomerMasterAccountID
No description available.
.PARAMETER CustomerIsBilledWithMasterAccount
No description available.
.PARAMETER CustomerCancelCode
No description available.
.PARAMETER CustomerHoldCode
No description available.
.PARAMETER CustomerCollectionCodeId
No description available.
.PARAMETER CustomerSize
No description available.
.PARAMETER CustomerMapCode
No description available.
.PARAMETER CustomerCallCode
No description available.
.PARAMETER CustomerPhoneHome
No description available.
.PARAMETER CustomerPhoneWork
No description available.
.PARAMETER CustomerPhoneCell
No description available.
.PARAMETER CustomerPhoneOthr
No description available.
.PARAMETER CustomerPhoneFax
No description available.
.PARAMETER CustomerPhonePage
No description available.
.PARAMETER CustomerEmail
No description available.
.PARAMETER CustomerCreditLimit
No description available.
.PARAMETER CustomerDirections
No description available.
.PARAMETER CustomerSinceDate
No description available.
.PARAMETER CustomerRoute
No description available.
.PARAMETER ResidentialCommercial
No description available.
.PARAMETER CustomerCancelDate
No description available.
.PARAMETER CustomerCancelBy
No description available.
.PARAMETER CustomerHoldBegin
No description available.
.PARAMETER CustomerHoldEnd
No description available.
.PARAMETER CustomerLatitude
No description available.
.PARAMETER CustomerLongitude
No description available.
.PARAMETER CustomerEstimatedHouseCost
No description available.
.PARAMETER CustomerYearBuilt
No description available.
.PARAMETER CustomerPropertyDimensions
No description available.
.PARAMETER CustomerCensusTractInfo
No description available.
.PARAMETER CustomerTechNote
No description available.
.PARAMETER CustomerMemo
No description available.
.PARAMETER CustomerStatementType
No description available.
.PARAMETER CustomerIsMasterAccount
No description available.
.PARAMETER BillingType
No description available.
.PARAMETER CustomerNoInterest
No description available.
.PARAMETER CustomerPh
No description available.
.PARAMETER CustomerCollectionDate
No description available.
.PARAMETER DiscountCode
No description available.
.PARAMETER CarrierRoute
No description available.
.PARAMETER CustomerReferenceID
No description available.
.PARAMETER CustomerUnitCode
No description available.
.PARAMETER CustomerNoCreditHold
No description available.
.PARAMETER CustomerTrackingID
No description available.
.PARAMETER CustomerUserID
No description available.
.PARAMETER CustomerPassword
No description available.
.PARAMETER CustomerCollectionExportDate
No description available.
.PARAMETER CustomerCountyID
No description available.
.PARAMETER CustomerMemoAlert
No description available.
.PARAMETER CustomerSizeSource
No description available.
.PARAMETER BillingEmail
No description available.
.PARAMETER Records
No description available.
.PARAMETER Offset
No description available.
.PARAMETER Created
No description available.
.PARAMETER Updated
No description available.
.OUTPUTS

CustomerSearch<PSCustomObject>
#>

function Initialize-RgSaCustomerSearch {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [Int32[]]
        ${CustomerID},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerStatus},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerCompanyName},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerFirstName},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerLastName},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerStreetAddress},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerPreDirection},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerStreetNumber},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerPostDirection},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerStreetSuffix},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerStreetName},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerCity},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerState},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerZip},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${UseBillingInfo},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerInvoiceType},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingCompanyName},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingLastName},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingFirstName},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingStreetAddress},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingPreDirection},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingStreetNumber},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingStreetSuffix},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingPostDirection},
        [Parameter(Position = 24, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingStreetName},
        [Parameter(Position = 25, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingCity},
        [Parameter(Position = 26, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingState},
        [Parameter(Position = 27, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingZip},
        [Parameter(Position = 28, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CustomerSource},
        [Parameter(Position = 29, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CustomerSubdivisionID},
        [Parameter(Position = 30, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerBranchID},
        [Parameter(Position = 31, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerTaxId1},
        [Parameter(Position = 32, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerTaxId2},
        [Parameter(Position = 33, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerTaxId3},
        [Parameter(Position = 34, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerTerritoryCode},
        [Parameter(Position = 35, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CustomerMasterAccountID},
        [Parameter(Position = 36, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${CustomerIsBilledWithMasterAccount},
        [Parameter(Position = 37, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CustomerCancelCode},
        [Parameter(Position = 38, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CustomerHoldCode},
        [Parameter(Position = 39, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CustomerCollectionCodeId},
        [Parameter(Position = 40, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerSize},
        [Parameter(Position = 41, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerMapCode},
        [Parameter(Position = 42, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CustomerCallCode},
        [Parameter(Position = 43, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerPhoneHome},
        [Parameter(Position = 44, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerPhoneWork},
        [Parameter(Position = 45, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerPhoneCell},
        [Parameter(Position = 46, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerPhoneOthr},
        [Parameter(Position = 47, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerPhoneFax},
        [Parameter(Position = 48, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerPhonePage},
        [Parameter(Position = 49, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerEmail},
        [Parameter(Position = 50, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerCreditLimit},
        [Parameter(Position = 51, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerDirections},
        [Parameter(Position = 52, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerSinceDate},
        [Parameter(Position = 53, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerRoute},
        [Parameter(Position = 54, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ResidentialCommercial},
        [Parameter(Position = 55, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerCancelDate},
        [Parameter(Position = 56, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerCancelBy},
        [Parameter(Position = 57, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerHoldBegin},
        [Parameter(Position = 58, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerHoldEnd},
        [Parameter(Position = 59, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerLatitude},
        [Parameter(Position = 60, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerLongitude},
        [Parameter(Position = 61, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerEstimatedHouseCost},
        [Parameter(Position = 62, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerYearBuilt},
        [Parameter(Position = 63, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerPropertyDimensions},
        [Parameter(Position = 64, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerCensusTractInfo},
        [Parameter(Position = 65, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerTechNote},
        [Parameter(Position = 66, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerMemo},
        [Parameter(Position = 67, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerStatementType},
        [Parameter(Position = 68, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${CustomerIsMasterAccount},
        [Parameter(Position = 69, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingType},
        [Parameter(Position = 70, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${CustomerNoInterest},
        [Parameter(Position = 71, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerPh},
        [Parameter(Position = 72, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerCollectionDate},
        [Parameter(Position = 73, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DiscountCode},
        [Parameter(Position = 74, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CarrierRoute},
        [Parameter(Position = 75, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerReferenceID},
        [Parameter(Position = 76, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CustomerUnitCode},
        [Parameter(Position = 77, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${CustomerNoCreditHold},
        [Parameter(Position = 78, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerTrackingID},
        [Parameter(Position = 79, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerUserID},
        [Parameter(Position = 80, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerPassword},
        [Parameter(Position = 81, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${CustomerCollectionExportDate},
        [Parameter(Position = 82, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerCountyID},
        [Parameter(Position = 83, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${CustomerMemoAlert},
        [Parameter(Position = 84, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CustomerSizeSource},
        [Parameter(Position = 85, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${BillingEmail},
        [Parameter(Position = 86, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Records},
        [Parameter(Position = 87, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Offset},
        [Parameter(Position = 88, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Created},
        [Parameter(Position = 89, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Updated}
    )

    Process {
        'Creating PSCustomObject: RealGreenSAPS => RgSaCustomerSearch' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        if ($Records -and $Records -gt 500) {
          throw "invalid value for 'Records', must be smaller than or equal to 500."
        }

        if ($Records -and $Records -lt 0) {
          throw "invalid value for 'Records', must be greater than or equal to 0."
        }

        if ($Offset -and $Offset -gt 2147483647) {
          throw "invalid value for 'Offset', must be smaller than or equal to 2147483647."
        }

        if ($Offset -and $Offset -lt 0) {
          throw "invalid value for 'Offset', must be greater than or equal to 0."
        }


        $PSO = [PSCustomObject]@{
            "customerID" = ${CustomerID}
            "customerStatus" = ${CustomerStatus}
            "customerCompanyName" = ${CustomerCompanyName}
            "customerFirstName" = ${CustomerFirstName}
            "customerLastName" = ${CustomerLastName}
            "customerStreetAddress" = ${CustomerStreetAddress}
            "customerPreDirection" = ${CustomerPreDirection}
            "customerStreetNumber" = ${CustomerStreetNumber}
            "customerPostDirection" = ${CustomerPostDirection}
            "customerStreetSuffix" = ${CustomerStreetSuffix}
            "customerStreetName" = ${CustomerStreetName}
            "customerCity" = ${CustomerCity}
            "customerState" = ${CustomerState}
            "customerZip" = ${CustomerZip}
            "useBillingInfo" = ${UseBillingInfo}
            "customerInvoiceType" = ${CustomerInvoiceType}
            "billingCompanyName" = ${BillingCompanyName}
            "billingLastName" = ${BillingLastName}
            "billingFirstName" = ${BillingFirstName}
            "billingStreetAddress" = ${BillingStreetAddress}
            "billingPreDirection" = ${BillingPreDirection}
            "billingStreetNumber" = ${BillingStreetNumber}
            "billingStreetSuffix" = ${BillingStreetSuffix}
            "billingPostDirection" = ${BillingPostDirection}
            "billingStreetName" = ${BillingStreetName}
            "billingCity" = ${BillingCity}
            "billingState" = ${BillingState}
            "billingZip" = ${BillingZip}
            "customerSource" = ${CustomerSource}
            "customerSubdivisionID" = ${CustomerSubdivisionID}
            "customerBranchID" = ${CustomerBranchID}
            "customerTaxId1" = ${CustomerTaxId1}
            "customerTaxId2" = ${CustomerTaxId2}
            "customerTaxId3" = ${CustomerTaxId3}
            "customerTerritoryCode" = ${CustomerTerritoryCode}
            "customerMasterAccountID" = ${CustomerMasterAccountID}
            "customerIsBilledWithMasterAccount" = ${CustomerIsBilledWithMasterAccount}
            "customerCancelCode" = ${CustomerCancelCode}
            "customerHoldCode" = ${CustomerHoldCode}
            "customerCollectionCodeId" = ${CustomerCollectionCodeId}
            "customerSize" = ${CustomerSize}
            "customerMapCode" = ${CustomerMapCode}
            "customerCallCode" = ${CustomerCallCode}
            "customerPhoneHome" = ${CustomerPhoneHome}
            "customerPhoneWork" = ${CustomerPhoneWork}
            "customerPhoneCell" = ${CustomerPhoneCell}
            "customerPhoneOthr" = ${CustomerPhoneOthr}
            "customerPhoneFax" = ${CustomerPhoneFax}
            "customerPhonePage" = ${CustomerPhonePage}
            "customerEmail" = ${CustomerEmail}
            "customerCreditLimit" = ${CustomerCreditLimit}
            "customerDirections" = ${CustomerDirections}
            "customerSinceDate" = ${CustomerSinceDate}
            "customerRoute" = ${CustomerRoute}
            "residentialCommercial" = ${ResidentialCommercial}
            "customerCancelDate" = ${CustomerCancelDate}
            "customerCancelBy" = ${CustomerCancelBy}
            "customerHoldBegin" = ${CustomerHoldBegin}
            "customerHoldEnd" = ${CustomerHoldEnd}
            "customerLatitude" = ${CustomerLatitude}
            "customerLongitude" = ${CustomerLongitude}
            "customerEstimatedHouseCost" = ${CustomerEstimatedHouseCost}
            "customerYearBuilt" = ${CustomerYearBuilt}
            "customerPropertyDimensions" = ${CustomerPropertyDimensions}
            "customerCensusTractInfo" = ${CustomerCensusTractInfo}
            "customerTechNote" = ${CustomerTechNote}
            "customerMemo" = ${CustomerMemo}
            "customerStatementType" = ${CustomerStatementType}
            "customerIsMasterAccount" = ${CustomerIsMasterAccount}
            "billingType" = ${BillingType}
            "customerNoInterest" = ${CustomerNoInterest}
            "customerPh" = ${CustomerPh}
            "customerCollectionDate" = ${CustomerCollectionDate}
            "discountCode" = ${DiscountCode}
            "carrierRoute" = ${CarrierRoute}
            "customerReferenceID" = ${CustomerReferenceID}
            "customerUnitCode" = ${CustomerUnitCode}
            "customerNoCreditHold" = ${CustomerNoCreditHold}
            "customerTrackingID" = ${CustomerTrackingID}
            "customerUserID" = ${CustomerUserID}
            "customerPassword" = ${CustomerPassword}
            "customerCollectionExportDate" = ${CustomerCollectionExportDate}
            "customerCountyID" = ${CustomerCountyID}
            "customerMemoAlert" = ${CustomerMemoAlert}
            "customerSizeSource" = ${CustomerSizeSource}
            "billingEmail" = ${BillingEmail}
            "records" = ${Records}
            "offset" = ${Offset}
            "created" = ${Created}
            "updated" = ${Updated}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to CustomerSearch<PSCustomObject>

.DESCRIPTION

Convert from JSON to CustomerSearch<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

CustomerSearch<PSCustomObject>
#>
function ConvertFrom-RgSaJsonToCustomerSearch {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: RealGreenSAPS => RgSaCustomerSearch' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RgSaCustomerSearch
        $AllProperties = ("customerID", "customerStatus", "customerCompanyName", "customerFirstName", "customerLastName", "customerStreetAddress", "customerPreDirection", "customerStreetNumber", "customerPostDirection", "customerStreetSuffix", "customerStreetName", "customerCity", "customerState", "customerZip", "useBillingInfo", "customerInvoiceType", "billingCompanyName", "billingLastName", "billingFirstName", "billingStreetAddress", "billingPreDirection", "billingStreetNumber", "billingStreetSuffix", "billingPostDirection", "billingStreetName", "billingCity", "billingState", "billingZip", "customerSource", "customerSubdivisionID", "customerBranchID", "customerTaxId1", "customerTaxId2", "customerTaxId3", "customerTerritoryCode", "customerMasterAccountID", "customerIsBilledWithMasterAccount", "customerCancelCode", "customerHoldCode", "customerCollectionCodeId", "customerSize", "customerMapCode", "customerCallCode", "customerPhoneHome", "customerPhoneWork", "customerPhoneCell", "customerPhoneOthr", "customerPhoneFax", "customerPhonePage", "customerEmail", "customerCreditLimit", "customerDirections", "customerSinceDate", "customerRoute", "residentialCommercial", "customerCancelDate", "customerCancelBy", "customerHoldBegin", "customerHoldEnd", "customerLatitude", "customerLongitude", "customerEstimatedHouseCost", "customerYearBuilt", "customerPropertyDimensions", "customerCensusTractInfo", "customerTechNote", "customerMemo", "customerStatementType", "customerIsMasterAccount", "billingType", "customerNoInterest", "customerPh", "customerCollectionDate", "discountCode", "carrierRoute", "customerReferenceID", "customerUnitCode", "customerNoCreditHold", "customerTrackingID", "customerUserID", "customerPassword", "customerCollectionExportDate", "customerCountyID", "customerMemoAlert", "customerSizeSource", "billingEmail", "records", "offset", "created", "updated")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerID"))) { #optional property not found
            $CustomerID = $null
        } else {
            $CustomerID = $JsonParameters.PSobject.Properties["customerID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerStatus"))) { #optional property not found
            $CustomerStatus = $null
        } else {
            $CustomerStatus = $JsonParameters.PSobject.Properties["customerStatus"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerCompanyName"))) { #optional property not found
            $CustomerCompanyName = $null
        } else {
            $CustomerCompanyName = $JsonParameters.PSobject.Properties["customerCompanyName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerFirstName"))) { #optional property not found
            $CustomerFirstName = $null
        } else {
            $CustomerFirstName = $JsonParameters.PSobject.Properties["customerFirstName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerLastName"))) { #optional property not found
            $CustomerLastName = $null
        } else {
            $CustomerLastName = $JsonParameters.PSobject.Properties["customerLastName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerStreetAddress"))) { #optional property not found
            $CustomerStreetAddress = $null
        } else {
            $CustomerStreetAddress = $JsonParameters.PSobject.Properties["customerStreetAddress"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerPreDirection"))) { #optional property not found
            $CustomerPreDirection = $null
        } else {
            $CustomerPreDirection = $JsonParameters.PSobject.Properties["customerPreDirection"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerStreetNumber"))) { #optional property not found
            $CustomerStreetNumber = $null
        } else {
            $CustomerStreetNumber = $JsonParameters.PSobject.Properties["customerStreetNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerPostDirection"))) { #optional property not found
            $CustomerPostDirection = $null
        } else {
            $CustomerPostDirection = $JsonParameters.PSobject.Properties["customerPostDirection"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerStreetSuffix"))) { #optional property not found
            $CustomerStreetSuffix = $null
        } else {
            $CustomerStreetSuffix = $JsonParameters.PSobject.Properties["customerStreetSuffix"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerStreetName"))) { #optional property not found
            $CustomerStreetName = $null
        } else {
            $CustomerStreetName = $JsonParameters.PSobject.Properties["customerStreetName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerCity"))) { #optional property not found
            $CustomerCity = $null
        } else {
            $CustomerCity = $JsonParameters.PSobject.Properties["customerCity"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerState"))) { #optional property not found
            $CustomerState = $null
        } else {
            $CustomerState = $JsonParameters.PSobject.Properties["customerState"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerZip"))) { #optional property not found
            $CustomerZip = $null
        } else {
            $CustomerZip = $JsonParameters.PSobject.Properties["customerZip"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "useBillingInfo"))) { #optional property not found
            $UseBillingInfo = $null
        } else {
            $UseBillingInfo = $JsonParameters.PSobject.Properties["useBillingInfo"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerInvoiceType"))) { #optional property not found
            $CustomerInvoiceType = $null
        } else {
            $CustomerInvoiceType = $JsonParameters.PSobject.Properties["customerInvoiceType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billingCompanyName"))) { #optional property not found
            $BillingCompanyName = $null
        } else {
            $BillingCompanyName = $JsonParameters.PSobject.Properties["billingCompanyName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billingLastName"))) { #optional property not found
            $BillingLastName = $null
        } else {
            $BillingLastName = $JsonParameters.PSobject.Properties["billingLastName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billingFirstName"))) { #optional property not found
            $BillingFirstName = $null
        } else {
            $BillingFirstName = $JsonParameters.PSobject.Properties["billingFirstName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billingStreetAddress"))) { #optional property not found
            $BillingStreetAddress = $null
        } else {
            $BillingStreetAddress = $JsonParameters.PSobject.Properties["billingStreetAddress"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billingPreDirection"))) { #optional property not found
            $BillingPreDirection = $null
        } else {
            $BillingPreDirection = $JsonParameters.PSobject.Properties["billingPreDirection"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billingStreetNumber"))) { #optional property not found
            $BillingStreetNumber = $null
        } else {
            $BillingStreetNumber = $JsonParameters.PSobject.Properties["billingStreetNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billingStreetSuffix"))) { #optional property not found
            $BillingStreetSuffix = $null
        } else {
            $BillingStreetSuffix = $JsonParameters.PSobject.Properties["billingStreetSuffix"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billingPostDirection"))) { #optional property not found
            $BillingPostDirection = $null
        } else {
            $BillingPostDirection = $JsonParameters.PSobject.Properties["billingPostDirection"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billingStreetName"))) { #optional property not found
            $BillingStreetName = $null
        } else {
            $BillingStreetName = $JsonParameters.PSobject.Properties["billingStreetName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billingCity"))) { #optional property not found
            $BillingCity = $null
        } else {
            $BillingCity = $JsonParameters.PSobject.Properties["billingCity"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billingState"))) { #optional property not found
            $BillingState = $null
        } else {
            $BillingState = $JsonParameters.PSobject.Properties["billingState"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billingZip"))) { #optional property not found
            $BillingZip = $null
        } else {
            $BillingZip = $JsonParameters.PSobject.Properties["billingZip"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerSource"))) { #optional property not found
            $CustomerSource = $null
        } else {
            $CustomerSource = $JsonParameters.PSobject.Properties["customerSource"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerSubdivisionID"))) { #optional property not found
            $CustomerSubdivisionID = $null
        } else {
            $CustomerSubdivisionID = $JsonParameters.PSobject.Properties["customerSubdivisionID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerBranchID"))) { #optional property not found
            $CustomerBranchID = $null
        } else {
            $CustomerBranchID = $JsonParameters.PSobject.Properties["customerBranchID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerTaxId1"))) { #optional property not found
            $CustomerTaxId1 = $null
        } else {
            $CustomerTaxId1 = $JsonParameters.PSobject.Properties["customerTaxId1"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerTaxId2"))) { #optional property not found
            $CustomerTaxId2 = $null
        } else {
            $CustomerTaxId2 = $JsonParameters.PSobject.Properties["customerTaxId2"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerTaxId3"))) { #optional property not found
            $CustomerTaxId3 = $null
        } else {
            $CustomerTaxId3 = $JsonParameters.PSobject.Properties["customerTaxId3"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerTerritoryCode"))) { #optional property not found
            $CustomerTerritoryCode = $null
        } else {
            $CustomerTerritoryCode = $JsonParameters.PSobject.Properties["customerTerritoryCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerMasterAccountID"))) { #optional property not found
            $CustomerMasterAccountID = $null
        } else {
            $CustomerMasterAccountID = $JsonParameters.PSobject.Properties["customerMasterAccountID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerIsBilledWithMasterAccount"))) { #optional property not found
            $CustomerIsBilledWithMasterAccount = $null
        } else {
            $CustomerIsBilledWithMasterAccount = $JsonParameters.PSobject.Properties["customerIsBilledWithMasterAccount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerCancelCode"))) { #optional property not found
            $CustomerCancelCode = $null
        } else {
            $CustomerCancelCode = $JsonParameters.PSobject.Properties["customerCancelCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerHoldCode"))) { #optional property not found
            $CustomerHoldCode = $null
        } else {
            $CustomerHoldCode = $JsonParameters.PSobject.Properties["customerHoldCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerCollectionCodeId"))) { #optional property not found
            $CustomerCollectionCodeId = $null
        } else {
            $CustomerCollectionCodeId = $JsonParameters.PSobject.Properties["customerCollectionCodeId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerSize"))) { #optional property not found
            $CustomerSize = $null
        } else {
            $CustomerSize = $JsonParameters.PSobject.Properties["customerSize"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerMapCode"))) { #optional property not found
            $CustomerMapCode = $null
        } else {
            $CustomerMapCode = $JsonParameters.PSobject.Properties["customerMapCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerCallCode"))) { #optional property not found
            $CustomerCallCode = $null
        } else {
            $CustomerCallCode = $JsonParameters.PSobject.Properties["customerCallCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerPhoneHome"))) { #optional property not found
            $CustomerPhoneHome = $null
        } else {
            $CustomerPhoneHome = $JsonParameters.PSobject.Properties["customerPhoneHome"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerPhoneWork"))) { #optional property not found
            $CustomerPhoneWork = $null
        } else {
            $CustomerPhoneWork = $JsonParameters.PSobject.Properties["customerPhoneWork"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerPhoneCell"))) { #optional property not found
            $CustomerPhoneCell = $null
        } else {
            $CustomerPhoneCell = $JsonParameters.PSobject.Properties["customerPhoneCell"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerPhoneOthr"))) { #optional property not found
            $CustomerPhoneOthr = $null
        } else {
            $CustomerPhoneOthr = $JsonParameters.PSobject.Properties["customerPhoneOthr"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerPhoneFax"))) { #optional property not found
            $CustomerPhoneFax = $null
        } else {
            $CustomerPhoneFax = $JsonParameters.PSobject.Properties["customerPhoneFax"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerPhonePage"))) { #optional property not found
            $CustomerPhonePage = $null
        } else {
            $CustomerPhonePage = $JsonParameters.PSobject.Properties["customerPhonePage"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerEmail"))) { #optional property not found
            $CustomerEmail = $null
        } else {
            $CustomerEmail = $JsonParameters.PSobject.Properties["customerEmail"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerCreditLimit"))) { #optional property not found
            $CustomerCreditLimit = $null
        } else {
            $CustomerCreditLimit = $JsonParameters.PSobject.Properties["customerCreditLimit"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerDirections"))) { #optional property not found
            $CustomerDirections = $null
        } else {
            $CustomerDirections = $JsonParameters.PSobject.Properties["customerDirections"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerSinceDate"))) { #optional property not found
            $CustomerSinceDate = $null
        } else {
            $CustomerSinceDate = $JsonParameters.PSobject.Properties["customerSinceDate"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerRoute"))) { #optional property not found
            $CustomerRoute = $null
        } else {
            $CustomerRoute = $JsonParameters.PSobject.Properties["customerRoute"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "residentialCommercial"))) { #optional property not found
            $ResidentialCommercial = $null
        } else {
            $ResidentialCommercial = $JsonParameters.PSobject.Properties["residentialCommercial"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerCancelDate"))) { #optional property not found
            $CustomerCancelDate = $null
        } else {
            $CustomerCancelDate = $JsonParameters.PSobject.Properties["customerCancelDate"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerCancelBy"))) { #optional property not found
            $CustomerCancelBy = $null
        } else {
            $CustomerCancelBy = $JsonParameters.PSobject.Properties["customerCancelBy"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerHoldBegin"))) { #optional property not found
            $CustomerHoldBegin = $null
        } else {
            $CustomerHoldBegin = $JsonParameters.PSobject.Properties["customerHoldBegin"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerHoldEnd"))) { #optional property not found
            $CustomerHoldEnd = $null
        } else {
            $CustomerHoldEnd = $JsonParameters.PSobject.Properties["customerHoldEnd"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerLatitude"))) { #optional property not found
            $CustomerLatitude = $null
        } else {
            $CustomerLatitude = $JsonParameters.PSobject.Properties["customerLatitude"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerLongitude"))) { #optional property not found
            $CustomerLongitude = $null
        } else {
            $CustomerLongitude = $JsonParameters.PSobject.Properties["customerLongitude"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerEstimatedHouseCost"))) { #optional property not found
            $CustomerEstimatedHouseCost = $null
        } else {
            $CustomerEstimatedHouseCost = $JsonParameters.PSobject.Properties["customerEstimatedHouseCost"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerYearBuilt"))) { #optional property not found
            $CustomerYearBuilt = $null
        } else {
            $CustomerYearBuilt = $JsonParameters.PSobject.Properties["customerYearBuilt"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerPropertyDimensions"))) { #optional property not found
            $CustomerPropertyDimensions = $null
        } else {
            $CustomerPropertyDimensions = $JsonParameters.PSobject.Properties["customerPropertyDimensions"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerCensusTractInfo"))) { #optional property not found
            $CustomerCensusTractInfo = $null
        } else {
            $CustomerCensusTractInfo = $JsonParameters.PSobject.Properties["customerCensusTractInfo"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerTechNote"))) { #optional property not found
            $CustomerTechNote = $null
        } else {
            $CustomerTechNote = $JsonParameters.PSobject.Properties["customerTechNote"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerMemo"))) { #optional property not found
            $CustomerMemo = $null
        } else {
            $CustomerMemo = $JsonParameters.PSobject.Properties["customerMemo"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerStatementType"))) { #optional property not found
            $CustomerStatementType = $null
        } else {
            $CustomerStatementType = $JsonParameters.PSobject.Properties["customerStatementType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerIsMasterAccount"))) { #optional property not found
            $CustomerIsMasterAccount = $null
        } else {
            $CustomerIsMasterAccount = $JsonParameters.PSobject.Properties["customerIsMasterAccount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billingType"))) { #optional property not found
            $BillingType = $null
        } else {
            $BillingType = $JsonParameters.PSobject.Properties["billingType"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerNoInterest"))) { #optional property not found
            $CustomerNoInterest = $null
        } else {
            $CustomerNoInterest = $JsonParameters.PSobject.Properties["customerNoInterest"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerPh"))) { #optional property not found
            $CustomerPh = $null
        } else {
            $CustomerPh = $JsonParameters.PSobject.Properties["customerPh"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerCollectionDate"))) { #optional property not found
            $CustomerCollectionDate = $null
        } else {
            $CustomerCollectionDate = $JsonParameters.PSobject.Properties["customerCollectionDate"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "discountCode"))) { #optional property not found
            $DiscountCode = $null
        } else {
            $DiscountCode = $JsonParameters.PSobject.Properties["discountCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "carrierRoute"))) { #optional property not found
            $CarrierRoute = $null
        } else {
            $CarrierRoute = $JsonParameters.PSobject.Properties["carrierRoute"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerReferenceID"))) { #optional property not found
            $CustomerReferenceID = $null
        } else {
            $CustomerReferenceID = $JsonParameters.PSobject.Properties["customerReferenceID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerUnitCode"))) { #optional property not found
            $CustomerUnitCode = $null
        } else {
            $CustomerUnitCode = $JsonParameters.PSobject.Properties["customerUnitCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerNoCreditHold"))) { #optional property not found
            $CustomerNoCreditHold = $null
        } else {
            $CustomerNoCreditHold = $JsonParameters.PSobject.Properties["customerNoCreditHold"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerTrackingID"))) { #optional property not found
            $CustomerTrackingID = $null
        } else {
            $CustomerTrackingID = $JsonParameters.PSobject.Properties["customerTrackingID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerUserID"))) { #optional property not found
            $CustomerUserID = $null
        } else {
            $CustomerUserID = $JsonParameters.PSobject.Properties["customerUserID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerPassword"))) { #optional property not found
            $CustomerPassword = $null
        } else {
            $CustomerPassword = $JsonParameters.PSobject.Properties["customerPassword"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerCollectionExportDate"))) { #optional property not found
            $CustomerCollectionExportDate = $null
        } else {
            $CustomerCollectionExportDate = $JsonParameters.PSobject.Properties["customerCollectionExportDate"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerCountyID"))) { #optional property not found
            $CustomerCountyID = $null
        } else {
            $CustomerCountyID = $JsonParameters.PSobject.Properties["customerCountyID"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerMemoAlert"))) { #optional property not found
            $CustomerMemoAlert = $null
        } else {
            $CustomerMemoAlert = $JsonParameters.PSobject.Properties["customerMemoAlert"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "customerSizeSource"))) { #optional property not found
            $CustomerSizeSource = $null
        } else {
            $CustomerSizeSource = $JsonParameters.PSobject.Properties["customerSizeSource"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "billingEmail"))) { #optional property not found
            $BillingEmail = $null
        } else {
            $BillingEmail = $JsonParameters.PSobject.Properties["billingEmail"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "records"))) { #optional property not found
            $Records = $null
        } else {
            $Records = $JsonParameters.PSobject.Properties["records"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "offset"))) { #optional property not found
            $Offset = $null
        } else {
            $Offset = $JsonParameters.PSobject.Properties["offset"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "created"))) { #optional property not found
            $Created = $null
        } else {
            $Created = $JsonParameters.PSobject.Properties["created"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "updated"))) { #optional property not found
            $Updated = $null
        } else {
            $Updated = $JsonParameters.PSobject.Properties["updated"].value
        }

        $PSO = [PSCustomObject]@{
            "customerID" = ${CustomerID}
            "customerStatus" = ${CustomerStatus}
            "customerCompanyName" = ${CustomerCompanyName}
            "customerFirstName" = ${CustomerFirstName}
            "customerLastName" = ${CustomerLastName}
            "customerStreetAddress" = ${CustomerStreetAddress}
            "customerPreDirection" = ${CustomerPreDirection}
            "customerStreetNumber" = ${CustomerStreetNumber}
            "customerPostDirection" = ${CustomerPostDirection}
            "customerStreetSuffix" = ${CustomerStreetSuffix}
            "customerStreetName" = ${CustomerStreetName}
            "customerCity" = ${CustomerCity}
            "customerState" = ${CustomerState}
            "customerZip" = ${CustomerZip}
            "useBillingInfo" = ${UseBillingInfo}
            "customerInvoiceType" = ${CustomerInvoiceType}
            "billingCompanyName" = ${BillingCompanyName}
            "billingLastName" = ${BillingLastName}
            "billingFirstName" = ${BillingFirstName}
            "billingStreetAddress" = ${BillingStreetAddress}
            "billingPreDirection" = ${BillingPreDirection}
            "billingStreetNumber" = ${BillingStreetNumber}
            "billingStreetSuffix" = ${BillingStreetSuffix}
            "billingPostDirection" = ${BillingPostDirection}
            "billingStreetName" = ${BillingStreetName}
            "billingCity" = ${BillingCity}
            "billingState" = ${BillingState}
            "billingZip" = ${BillingZip}
            "customerSource" = ${CustomerSource}
            "customerSubdivisionID" = ${CustomerSubdivisionID}
            "customerBranchID" = ${CustomerBranchID}
            "customerTaxId1" = ${CustomerTaxId1}
            "customerTaxId2" = ${CustomerTaxId2}
            "customerTaxId3" = ${CustomerTaxId3}
            "customerTerritoryCode" = ${CustomerTerritoryCode}
            "customerMasterAccountID" = ${CustomerMasterAccountID}
            "customerIsBilledWithMasterAccount" = ${CustomerIsBilledWithMasterAccount}
            "customerCancelCode" = ${CustomerCancelCode}
            "customerHoldCode" = ${CustomerHoldCode}
            "customerCollectionCodeId" = ${CustomerCollectionCodeId}
            "customerSize" = ${CustomerSize}
            "customerMapCode" = ${CustomerMapCode}
            "customerCallCode" = ${CustomerCallCode}
            "customerPhoneHome" = ${CustomerPhoneHome}
            "customerPhoneWork" = ${CustomerPhoneWork}
            "customerPhoneCell" = ${CustomerPhoneCell}
            "customerPhoneOthr" = ${CustomerPhoneOthr}
            "customerPhoneFax" = ${CustomerPhoneFax}
            "customerPhonePage" = ${CustomerPhonePage}
            "customerEmail" = ${CustomerEmail}
            "customerCreditLimit" = ${CustomerCreditLimit}
            "customerDirections" = ${CustomerDirections}
            "customerSinceDate" = ${CustomerSinceDate}
            "customerRoute" = ${CustomerRoute}
            "residentialCommercial" = ${ResidentialCommercial}
            "customerCancelDate" = ${CustomerCancelDate}
            "customerCancelBy" = ${CustomerCancelBy}
            "customerHoldBegin" = ${CustomerHoldBegin}
            "customerHoldEnd" = ${CustomerHoldEnd}
            "customerLatitude" = ${CustomerLatitude}
            "customerLongitude" = ${CustomerLongitude}
            "customerEstimatedHouseCost" = ${CustomerEstimatedHouseCost}
            "customerYearBuilt" = ${CustomerYearBuilt}
            "customerPropertyDimensions" = ${CustomerPropertyDimensions}
            "customerCensusTractInfo" = ${CustomerCensusTractInfo}
            "customerTechNote" = ${CustomerTechNote}
            "customerMemo" = ${CustomerMemo}
            "customerStatementType" = ${CustomerStatementType}
            "customerIsMasterAccount" = ${CustomerIsMasterAccount}
            "billingType" = ${BillingType}
            "customerNoInterest" = ${CustomerNoInterest}
            "customerPh" = ${CustomerPh}
            "customerCollectionDate" = ${CustomerCollectionDate}
            "discountCode" = ${DiscountCode}
            "carrierRoute" = ${CarrierRoute}
            "customerReferenceID" = ${CustomerReferenceID}
            "customerUnitCode" = ${CustomerUnitCode}
            "customerNoCreditHold" = ${CustomerNoCreditHold}
            "customerTrackingID" = ${CustomerTrackingID}
            "customerUserID" = ${CustomerUserID}
            "customerPassword" = ${CustomerPassword}
            "customerCollectionExportDate" = ${CustomerCollectionExportDate}
            "customerCountyID" = ${CustomerCountyID}
            "customerMemoAlert" = ${CustomerMemoAlert}
            "customerSizeSource" = ${CustomerSizeSource}
            "billingEmail" = ${BillingEmail}
            "records" = ${Records}
            "offset" = ${Offset}
            "created" = ${Created}
            "updated" = ${Updated}
        }

        return $PSO
    }

}

