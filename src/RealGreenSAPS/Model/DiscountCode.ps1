#
# RGS Common API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v01
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER DiscountAmount
No description available.
.PARAMETER IsSurcharge
No description available.
.PARAMETER Permanent
No description available.
.PARAMETER Available
No description available.
.PARAMETER Anybranch
No description available.
.PARAMETER Branches
No description available.
.PARAMETER AvailableOnWeb
No description available.
.PARAMETER AvailableOnHandheld
No description available.
.PARAMETER DollarDiscount
No description available.
.PARAMETER DiscountDescription
No description available.
.PARAMETER PromoCode
No description available.
.PARAMETER DiscountDescFrench
No description available.
.PARAMETER DiscountDescSpanish
No description available.
.PARAMETER ResidentialAccount
No description available.
.PARAMETER CommercialAccount
No description available.
.OUTPUTS

DiscountCode<PSCustomObject>
#>

function Initialize-RgSaDiscountCode {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${DiscountAmount},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${IsSurcharge},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Permanent},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Available},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Anybranch},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [Int32[]]
        ${Branches},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AvailableOnWeb},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${AvailableOnHandheld},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${DollarDiscount},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DiscountDescription},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PromoCode},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DiscountDescFrench},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DiscountDescSpanish},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ResidentialAccount},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CommercialAccount}
    )

    Process {
        'Creating PSCustomObject: RealGreenSAPS => RgSaDiscountCode' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "discountAmount" = ${DiscountAmount}
            "isSurcharge" = ${IsSurcharge}
            "permanent" = ${Permanent}
            "available" = ${Available}
            "anybranch" = ${Anybranch}
            "branches" = ${Branches}
            "availableOnWeb" = ${AvailableOnWeb}
            "availableOnHandheld" = ${AvailableOnHandheld}
            "dollarDiscount" = ${DollarDiscount}
            "discountDescription" = ${DiscountDescription}
            "promoCode" = ${PromoCode}
            "discountDescFrench" = ${DiscountDescFrench}
            "discountDescSpanish" = ${DiscountDescSpanish}
            "residentialAccount" = ${ResidentialAccount}
            "commercialAccount" = ${CommercialAccount}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to DiscountCode<PSCustomObject>

.DESCRIPTION

Convert from JSON to DiscountCode<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

DiscountCode<PSCustomObject>
#>
function ConvertFrom-RgSaJsonToDiscountCode {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: RealGreenSAPS => RgSaDiscountCode' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RgSaDiscountCode
        $AllProperties = ("id", "discountAmount", "isSurcharge", "permanent", "available", "anybranch", "branches", "availableOnWeb", "availableOnHandheld", "dollarDiscount", "discountDescription", "promoCode", "discountDescFrench", "discountDescSpanish", "residentialAccount", "commercialAccount")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "discountAmount"))) { #optional property not found
            $DiscountAmount = $null
        } else {
            $DiscountAmount = $JsonParameters.PSobject.Properties["discountAmount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "isSurcharge"))) { #optional property not found
            $IsSurcharge = $null
        } else {
            $IsSurcharge = $JsonParameters.PSobject.Properties["isSurcharge"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "permanent"))) { #optional property not found
            $Permanent = $null
        } else {
            $Permanent = $JsonParameters.PSobject.Properties["permanent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "available"))) { #optional property not found
            $Available = $null
        } else {
            $Available = $JsonParameters.PSobject.Properties["available"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "anybranch"))) { #optional property not found
            $Anybranch = $null
        } else {
            $Anybranch = $JsonParameters.PSobject.Properties["anybranch"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "branches"))) { #optional property not found
            $Branches = $null
        } else {
            $Branches = $JsonParameters.PSobject.Properties["branches"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "availableOnWeb"))) { #optional property not found
            $AvailableOnWeb = $null
        } else {
            $AvailableOnWeb = $JsonParameters.PSobject.Properties["availableOnWeb"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "availableOnHandheld"))) { #optional property not found
            $AvailableOnHandheld = $null
        } else {
            $AvailableOnHandheld = $JsonParameters.PSobject.Properties["availableOnHandheld"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "dollarDiscount"))) { #optional property not found
            $DollarDiscount = $null
        } else {
            $DollarDiscount = $JsonParameters.PSobject.Properties["dollarDiscount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "discountDescription"))) { #optional property not found
            $DiscountDescription = $null
        } else {
            $DiscountDescription = $JsonParameters.PSobject.Properties["discountDescription"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "promoCode"))) { #optional property not found
            $PromoCode = $null
        } else {
            $PromoCode = $JsonParameters.PSobject.Properties["promoCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "discountDescFrench"))) { #optional property not found
            $DiscountDescFrench = $null
        } else {
            $DiscountDescFrench = $JsonParameters.PSobject.Properties["discountDescFrench"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "discountDescSpanish"))) { #optional property not found
            $DiscountDescSpanish = $null
        } else {
            $DiscountDescSpanish = $JsonParameters.PSobject.Properties["discountDescSpanish"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "residentialAccount"))) { #optional property not found
            $ResidentialAccount = $null
        } else {
            $ResidentialAccount = $JsonParameters.PSobject.Properties["residentialAccount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "commercialAccount"))) { #optional property not found
            $CommercialAccount = $null
        } else {
            $CommercialAccount = $JsonParameters.PSobject.Properties["commercialAccount"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "discountAmount" = ${DiscountAmount}
            "isSurcharge" = ${IsSurcharge}
            "permanent" = ${Permanent}
            "available" = ${Available}
            "anybranch" = ${Anybranch}
            "branches" = ${Branches}
            "availableOnWeb" = ${AvailableOnWeb}
            "availableOnHandheld" = ${AvailableOnHandheld}
            "dollarDiscount" = ${DollarDiscount}
            "discountDescription" = ${DiscountDescription}
            "promoCode" = ${PromoCode}
            "discountDescFrench" = ${DiscountDescFrench}
            "discountDescSpanish" = ${DiscountDescSpanish}
            "residentialAccount" = ${ResidentialAccount}
            "commercialAccount" = ${CommercialAccount}
        }

        return $PSO
    }

}

