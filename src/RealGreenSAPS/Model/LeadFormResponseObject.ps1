#
# Real Green Service Assistant Common API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v01
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Success
No description available.
.PARAMETER ResponseMessage
No description available.
.PARAMETER CustNo
No description available.
.PARAMETER CurrentCustomerNumbers
No description available.
.OUTPUTS

LeadFormResponseObject<PSCustomObject>
#>

function Initialize-RGSALeadFormResponseObject {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Boolean]]
        ${Success},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ResponseMessage},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CustNo},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [Int32[]]
        ${CurrentCustomerNumbers}
    )

    Process {
        'Creating PSCustomObject: RealGreenSaPS => RGSALeadFormResponseObject' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "success" = ${Success}
            "responseMessage" = ${ResponseMessage}
            "custNo" = ${CustNo}
            "currentCustomerNumbers" = ${CurrentCustomerNumbers}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to LeadFormResponseObject<PSCustomObject>

.DESCRIPTION

Convert from JSON to LeadFormResponseObject<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

LeadFormResponseObject<PSCustomObject>
#>
function ConvertFrom-RGSAJsonToLeadFormResponseObject {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: RealGreenSaPS => RGSALeadFormResponseObject' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RGSALeadFormResponseObject
        $AllProperties = ("success", "responseMessage", "custNo", "currentCustomerNumbers")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "success"))) { #optional property not found
            $Success = $null
        } else {
            $Success = $JsonParameters.PSobject.Properties["success"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "responseMessage"))) { #optional property not found
            $ResponseMessage = $null
        } else {
            $ResponseMessage = $JsonParameters.PSobject.Properties["responseMessage"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "custNo"))) { #optional property not found
            $CustNo = $null
        } else {
            $CustNo = $JsonParameters.PSobject.Properties["custNo"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "currentCustomerNumbers"))) { #optional property not found
            $CurrentCustomerNumbers = $null
        } else {
            $CurrentCustomerNumbers = $JsonParameters.PSobject.Properties["currentCustomerNumbers"].value
        }

        $PSO = [PSCustomObject]@{
            "success" = ${Success}
            "responseMessage" = ${ResponseMessage}
            "custNo" = ${CustNo}
            "currentCustomerNumbers" = ${CurrentCustomerNumbers}
        }

        return $PSO
    }

}

