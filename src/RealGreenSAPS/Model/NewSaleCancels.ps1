#
# RGS Common API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v01
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER CancelCount
No description available.
.PARAMETER CancelDollar
No description available.
.PARAMETER SalesCount
No description available.
.PARAMETER SalesDollar
No description available.
.OUTPUTS

NewSaleCancels<PSCustomObject>
#>

function Initialize-RgSaNewSaleCancels {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CancelCount},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${CancelDollar},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${SalesCount},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${SalesDollar}
    )

    Process {
        'Creating PSCustomObject: RealGreenSAPS => RgSaNewSaleCancels' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "cancelCount" = ${CancelCount}
            "cancelDollar" = ${CancelDollar}
            "salesCount" = ${SalesCount}
            "salesDollar" = ${SalesDollar}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to NewSaleCancels<PSCustomObject>

.DESCRIPTION

Convert from JSON to NewSaleCancels<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

NewSaleCancels<PSCustomObject>
#>
function ConvertFrom-RgSaJsonToNewSaleCancels {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: RealGreenSAPS => RgSaNewSaleCancels' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RgSaNewSaleCancels
        $AllProperties = ("cancelCount", "cancelDollar", "salesCount", "salesDollar")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cancelCount"))) { #optional property not found
            $CancelCount = $null
        } else {
            $CancelCount = $JsonParameters.PSobject.Properties["cancelCount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "cancelDollar"))) { #optional property not found
            $CancelDollar = $null
        } else {
            $CancelDollar = $JsonParameters.PSobject.Properties["cancelDollar"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "salesCount"))) { #optional property not found
            $SalesCount = $null
        } else {
            $SalesCount = $JsonParameters.PSobject.Properties["salesCount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "salesDollar"))) { #optional property not found
            $SalesDollar = $null
        } else {
            $SalesDollar = $JsonParameters.PSobject.Properties["salesDollar"].value
        }

        $PSO = [PSCustomObject]@{
            "cancelCount" = ${CancelCount}
            "cancelDollar" = ${CancelDollar}
            "salesCount" = ${SalesCount}
            "salesDollar" = ${SalesDollar}
        }

        return $PSO
    }

}

