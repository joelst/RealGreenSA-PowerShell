#
# RGS Common API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v01
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER ServiceCallsScheduled
No description available.
.PARAMETER ServiceCallsCompleted
No description available.
.PARAMETER ResponseTime
No description available.
.OUTPUTS

ServiceCallResponseRates<PSCustomObject>
#>

function Initialize-RgSaServiceCallResponseRates {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ServiceCallsScheduled},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ServiceCallsCompleted},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${ResponseTime}
    )

    Process {
        'Creating PSCustomObject: RealGreenSAPS => RgSaServiceCallResponseRates' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "serviceCallsScheduled" = ${ServiceCallsScheduled}
            "serviceCallsCompleted" = ${ServiceCallsCompleted}
            "responseTime" = ${ResponseTime}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ServiceCallResponseRates<PSCustomObject>

.DESCRIPTION

Convert from JSON to ServiceCallResponseRates<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ServiceCallResponseRates<PSCustomObject>
#>
function ConvertFrom-RgSaJsonToServiceCallResponseRates {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: RealGreenSAPS => RgSaServiceCallResponseRates' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in RgSaServiceCallResponseRates
        $AllProperties = ("serviceCallsScheduled", "serviceCallsCompleted", "responseTime")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "serviceCallsScheduled"))) { #optional property not found
            $ServiceCallsScheduled = $null
        } else {
            $ServiceCallsScheduled = $JsonParameters.PSobject.Properties["serviceCallsScheduled"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "serviceCallsCompleted"))) { #optional property not found
            $ServiceCallsCompleted = $null
        } else {
            $ServiceCallsCompleted = $JsonParameters.PSobject.Properties["serviceCallsCompleted"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "responseTime"))) { #optional property not found
            $ResponseTime = $null
        } else {
            $ResponseTime = $JsonParameters.PSobject.Properties["responseTime"].value
        }

        $PSO = [PSCustomObject]@{
            "serviceCallsScheduled" = ${ServiceCallsScheduled}
            "serviceCallsCompleted" = ${ServiceCallsCompleted}
            "responseTime" = ${ResponseTime}
        }

        return $PSO
    }

}

