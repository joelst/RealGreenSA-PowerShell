#
# Real Green Service Assistant Common API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v01
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'RealGreenSaPS' -name 'RGSARGSAProductsApi' {
    Context 'Invoke-RGSAProductsAnyBranchAnybranchGet' {
        It 'Test Invoke-RGSAProductsAnyBranchAnybranchGet' {
            #$TestResult = Invoke-RGSAProductsAnyBranchAnybranchGet -Anybranch "TEST_VALUE" -ApiKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAProductsAvailableOnHandheldHandheldGet' {
        It 'Test Invoke-RGSAProductsAvailableOnHandheldHandheldGet' {
            #$TestResult = Invoke-RGSAProductsAvailableOnHandheldHandheldGet -Handheld "TEST_VALUE" -ApiKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAProductsEPANumberEpanoGet' {
        It 'Test Invoke-RGSAProductsEPANumberEpanoGet' {
            #$TestResult = Invoke-RGSAProductsEPANumberEpanoGet -Epano "TEST_VALUE" -ApiKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAProductsGet' {
        It 'Test Invoke-RGSAProductsGet' {
            #$TestResult = Invoke-RGSAProductsGet -ApiKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAProductsIdGet' {
        It 'Test Invoke-RGSAProductsIdGet' {
            #$TestResult = Invoke-RGSAProductsIdGet -Id "TEST_VALUE" -ApiKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAProductsIsLaborIslaborGet' {
        It 'Test Invoke-RGSAProductsIsLaborIslaborGet' {
            #$TestResult = Invoke-RGSAProductsIsLaborIslaborGet -Islabor "TEST_VALUE" -ApiKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAProductsIsMasterIsmasterGet' {
        It 'Test Invoke-RGSAProductsIsMasterIsmasterGet' {
            #$TestResult = Invoke-RGSAProductsIsMasterIsmasterGet -Ismaster "TEST_VALUE" -ApiKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAProductsIsNonInventoryNoninvGet' {
        It 'Test Invoke-RGSAProductsIsNonInventoryNoninvGet' {
            #$TestResult = Invoke-RGSAProductsIsNonInventoryNoninvGet -Noninv "TEST_VALUE" -ApiKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAProductsIsProductionForproducGet' {
        It 'Test Invoke-RGSAProductsIsProductionForproducGet' {
            #$TestResult = Invoke-RGSAProductsIsProductionForproducGet -Forproduc "TEST_VALUE" -ApiKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAProductsIsWorkOrderForworkordGet' {
        It 'Test Invoke-RGSAProductsIsWorkOrderForworkordGet' {
            #$TestResult = Invoke-RGSAProductsIsWorkOrderForworkordGet -Forworkord "TEST_VALUE" -ApiKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAProductsOnHandOnhandGet' {
        It 'Test Invoke-RGSAProductsOnHandOnhandGet' {
            #$TestResult = Invoke-RGSAProductsOnHandOnhandGet -Onhand "TEST_VALUE" -ApiKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAProductsOnHoldOnholdGet' {
        It 'Test Invoke-RGSAProductsOnHoldOnholdGet' {
            #$TestResult = Invoke-RGSAProductsOnHoldOnholdGet -Onhold "TEST_VALUE" -ApiKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAProductsPost' {
        It 'Test Invoke-RGSAProductsPost' {
            #$TestResult = Invoke-RGSAProductsPost -ApiKey "TEST_VALUE" -APIProductInsert "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAProductsProductCodeProdcodeGet' {
        It 'Test Invoke-RGSAProductsProductCodeProdcodeGet' {
            #$TestResult = Invoke-RGSAProductsProductCodeProdcodeGet -Prodcode "TEST_VALUE" -ApiKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
