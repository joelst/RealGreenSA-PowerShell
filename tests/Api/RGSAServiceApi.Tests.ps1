#
# Real Green Service Assistant Common API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: v01
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'RealGreenSaPS' -name 'RGSARGSAServiceApi' {
    Context 'Invoke-RGSAServiceAllocationsPost' {
        It 'Test Invoke-RGSAServiceAllocationsPost' {
            #$TestResult = Invoke-RGSAServiceAllocationsPost -ApiKey "TEST_VALUE" -ServiceID "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAServiceSearchGet' {
        It 'Test Invoke-RGSAServiceSearchGet' {
            #$TestResult = Invoke-RGSAServiceSearchGet -ApiKey "TEST_VALUE" -ID "TEST_VALUE" -CustomerNumber "TEST_VALUE" -CustomerCompanyID "TEST_VALUE" -ServiceYear "TEST_VALUE" -ProgramID "TEST_VALUE" -ServiceCode "TEST_VALUE" -ServiceStatus "TEST_VALUE" -SizeMinValue "TEST_VALUE" -SizeMaxValue "TEST_VALUE" -DiscountCode "TEST_VALUE" -PriceMinValue "TEST_VALUE" -PriceMaxValue "TEST_VALUE" -DiscountAmountMinValue "TEST_VALUE" -DiscountAmountMaxValue "TEST_VALUE" -PrepayAmountMinValue "TEST_VALUE" -PrepayAmountMaxValue "TEST_VALUE" -TotalAmountMinValue "TEST_VALUE" -TotalAmountMaxValue "TEST_VALUE" -RoundMinValue "TEST_VALUE" -RoundMaxValue "TEST_VALUE" -IsDependentService "TEST_VALUE" -EstimatedManHourMinValue "TEST_VALUE" -EstimatedManHourMaxValue "TEST_VALUE" -PostedMinValue "TEST_VALUE" -PostedMaxValue "TEST_VALUE" -InvoiceNumber "TEST_VALUE" -CallAhead "TEST_VALUE" -NextPriceMinValue "TEST_VALUE" -NextPriceMaxValue "TEST_VALUE" -StartDateMinValue "TEST_VALUE" -StartDateMaxValue "TEST_VALUE" -TechnicianNote "TEST_VALUE" -TechnicianNoteExpirationMinValue "TEST_VALUE" -TechnicianNoteExpirationMaxValue "TEST_VALUE" -CustomerNote "TEST_VALUE" -CustomerNoteExpirationMinValue "TEST_VALUE" -CustomerNoteExpirationMaxValue "TEST_VALUE" -PrepayId "TEST_VALUE" -ManHourRateMinValue "TEST_VALUE" -ManHourRateMaxValue "TEST_VALUE" -IsReversed "TEST_VALUE" -TaxableAmount1MinValue "TEST_VALUE" -TaxableAmount1MaxValue "TEST_VALUE" -TaxableAmount2MinValue "TEST_VALUE" -TaxableAmount2MaxValue "TEST_VALUE" -TaxableAmount3MinValue "TEST_VALUE" -TaxableAmount3MaxValue "TEST_VALUE" -ProgramDiscountAmountMinValue "TEST_VALUE" -ProgramDiscountAmountMaxValue "TEST_VALUE" -StartAfterMinValue "TEST_VALUE" -StartAfterMaxValue "TEST_VALUE" -EndBeforeMinValue "TEST_VALUE" -EndBeforeMaxValue "TEST_VALUE" -AssociationCode "TEST_VALUE" -ProductionValueMinValue "TEST_VALUE" -ProductionValueMaxValue "TEST_VALUE" -CalledMinValue "TEST_VALUE" -CalledMaxValue "TEST_VALUE" -IsPromised "TEST_VALUE" -TaxAmount1MinValue "TEST_VALUE" -TaxAmount1MaxValue "TEST_VALUE" -TaxAmount2MinValue "TEST_VALUE" -TaxAmount2MaxValue "TEST_VALUE" -TaxAmount3MinValue "TEST_VALUE" -TaxAmount3MaxValue "TEST_VALUE" -NextSizeMinValue "TEST_VALUE" -NextSizeMaxValue "TEST_VALUE" -SoldDateMinValue "TEST_VALUE" -SoldDateMaxValue "TEST_VALUE" -SoldByOne "TEST_VALUE" -SoldByTwo "TEST_VALUE" -AsapDateMinValue "TEST_VALUE" -AsapDateMaxValue "TEST_VALUE" -ScheduledTimeMinValue "TEST_VALUE" -ScheduledTimeMaxValue "TEST_VALUE" -ExtraDescription "TEST_VALUE" -Records "TEST_VALUE" -Offset "TEST_VALUE" -CreatedMinValue "TEST_VALUE" -CreatedMaxValue "TEST_VALUE" -UpdatedMinValue "TEST_VALUE" -UpdatedMaxValue "TEST_VALUE" -IsPaid "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAServiceSearchPost' {
        It 'Test Invoke-RGSAServiceSearchPost' {
            #$TestResult = Invoke-RGSAServiceSearchPost -ApiKey "TEST_VALUE" -ServiceSearch "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-RGSAServiceServiceIdGet' {
        It 'Test Invoke-RGSAServiceServiceIdGet' {
            #$TestResult = Invoke-RGSAServiceServiceIdGet -ServiceId "TEST_VALUE" -ApiKey "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
